<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

	<description>Example configuration to get you started.</description>

	<bean id="bean_zapdata_xadatasource" class="com.srnpr.zapdata.spring.XaDataSourceBean"
		init-method="init" destroy-method="close" abstract="true">
		<property name="xaDataSourceClassName"
			value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="poolSize" value="1" />
		<property name="minPoolSize" value="1" />
		<property name="maxPoolSize" value="30" />
		<property name="borrowConnectionTimeout" value="60" />
		<property name="reapTimeout" value="20" />
		<!-- 最大空闲时间 -->
		<property name="maxIdleTime" value="60" />
		<property name="maintenanceInterval" value="60" />
		<property name="loginTimeout" value="60" />
		<property name="logWriter" value="60" />
		<property name="testQuery">
			<value>select 1</value>
		</property>

	</bean>



	<!-- 事务这块用spring管理atomikos -->
	<bean id="bean_zapdata_atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>
	<bean id="bean_zapdata_atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>

	<bean id="bean_zapdata_springTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="bean_zapdata_atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="bean_zapdata_atomikosUserTransaction" />
		</property>
		<!-- 必须设置，否则程序出现异常 JtaTransactionManager does not support custom isolation 
			levels by default -->
		<property name="allowCustomIsolationLevels" value="true" />

	</bean>





	<!-- 支持 @AspectJ 标记 -->
	<aop:aspectj-autoproxy />


	<!-- 以AspectJ方式 定义 AOP  默认情况下只注入txservice路径下 -->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.*.*.txservice.*(..))"
			advice-ref="bean_zapdata_txAdvice" />
	</aop:config>

	<!-- 配置事务传播特性:如果存在一个事务，则支持当前事务。如果没有事务则开启：REQUIRED -->
	<tx:advice id="bean_zapdata_txAdvice" transaction-manager="bean_zapdata_springTransactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="create*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>



</beans>
